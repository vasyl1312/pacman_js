this.aStar
Цей код визначає функцію AStar, яка реалізує алгоритм A* для пошуку найкоротшого шляху між двома точками в сітці. Функція приймає два аргументи r та c, які представляють рядок і стовпець клітинки цілі в сітці. Алгоритм починається з заданої this.cell комірки та шукає шлях до цільової комірки, використовуючи комбінацію пошуку в ширину та евристики.

Функція ініціалізує кілька змінних, зокрема openList, яка є масивом, який спочатку містить початкову комірку, і closedList, яка є порожнім масивом. Він також ініціалізує goalCell змінну коміркою в сітці з указаним рядком і стовпцем і встановлює масив visitedу масив false значень такої ж довжини, що й grid.

Далі функція перебирає всі комірки в сітці та встановлює для їхніх властивостей cost, heuristic, і parent  і значення для Infinity, Infinity, and undefined, відповідно. Потім він встановлює властивість у cost у this.cell to 0.

Основний цикл алгоритму починається з перевірки, чи openList порожній масив. Якщо це так, алгоритм припиняє роботу, оскільки немає шляху до клітинки цілі. Якщо openList масив не порожній, алгоритм сортує його в порядку спадання на основі властивостей f кожної комірки, де f є сумою властивостей cost і heuristic комірки. Комірка з найвищим f значенням видаляється з openList масиву та встановлюється як currentCell змінна.

Якщо currentCell дорівнює goalCell, алгоритм знайшов шлях до мети, і цикл завершується. В іншому випадку currentCell до масиву додається closedList, а алгоритм досліджує його сусідів.

Для кожної сусідньої комірки алгоритм спочатку перевіряє, чи вона вже знаходиться в closedList. Якщо так, сусідня комірка вже досліджена, і алгоритм її пропускає. В іншому випадку алгоритм обчислює heuristic значення сусідньої комірки за допомогою manhattanDistance функції, додає 1 до cost, щоб currentCell отримати newCost, і перевіряє, чи є сусідня комірка в openList. Якщо це не так, сусідня клітинка додається до openList. Якщо так, алгоритм перевіряє, чи newCost більше або дорівнює cost сусідній комірці. Якщо це так, сусідня комірка вже була досліджена з меншою ціною, і алгоритм її пропускає. В іншому випадку властивості parent, cost, і f сусідньої комірки оновлюються.

Після того, як усі сусіди досліджено, алгоритм повертається до початку основного циклу та повторює процес із наступною коміркою в openList.

Коли алгоритм знайде цільову комірку, він відстежує шлях, починаючи з goalCellі дотримуючись parent властивості кожної комірки, доки не досягне початкової комірки. Комірки, відвідані під час пошуку, додаються до closedList, і функція повертає шлях у вигляді масиву комірок.